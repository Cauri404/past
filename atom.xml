<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cauri (/≥▽≤/)</title>
  
  <subtitle>这里什么都有～出门左转荷花花的blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-12-15T03:49:27.209Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Cauri</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>找阈值</title>
    <link href="http://yoursite.com/2018/12/15/%E6%89%BE%E9%98%88%E5%80%BC/"/>
    <id>http://yoursite.com/2018/12/15/找阈值/</id>
    <published>2018-12-14T21:55:35.000Z</published>
    <updated>2018-12-15T03:49:27.209Z</updated>
    
    <content type="html"><![CDATA[<p>3500个数字排序</p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>在我的电脑上找到了：10<br>跑了很多次都在10附近<br>本来想做个折线图，打开表格宕机了，先拿表格凑合</p><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p>运行程序慢<br>效率提高不明显<br>结果和正确答案有出入<br>10000万溢出了<br>100万以上没有溢出的时候都是段错误<br>我也不知道为什么<br> <a id="more"></a><br>修改了main，不用一直改数字<br> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">array</span>[M];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">50</span>;j&gt;<span class="number">0</span>;j--)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d:\n"</span>,j);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">double</span>  duration;</span><br><span class="line">        create_Ary(<span class="built_in">array</span>,M);</span><br><span class="line">        <span class="keyword">clock_t</span> start, finish;</span><br><span class="line">            start = clock();</span><br><span class="line">            quicksort(<span class="built_in">array</span>,<span class="number">0</span>,M,j);</span><br><span class="line">            finish = clock();</span><br><span class="line">            duration = (<span class="keyword">double</span>)(finish - start) / CLOCKS_PER_SEC;</span><br><span class="line">            <span class="comment">//print(array,M);</span></span><br><span class="line">            <span class="built_in">printf</span>( <span class="string">"%f seconds\n"</span>, duration );</span><br><span class="line">            <span class="comment">//elapsed_time();</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>下面是原程序<br> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 5000<span class="comment">//调整这个改变排序的数的个数</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SelectionSort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> p,<span class="keyword">int</span> r)</span></span>;<span class="comment">//选择排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">create_Ary</span> <span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> n)</span></span>;<span class="comment">//制造随机数组</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[],<span class="keyword">int</span> p,<span class="keyword">int</span> r)</span></span>;<span class="comment">//将数组分成大于某个数和小于某个数两部分</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exchange</span><span class="params">(<span class="keyword">int</span> *p,<span class="keyword">int</span> *q)</span></span>;<span class="comment">//交换函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[],<span class="keyword">int</span> len)</span></span>;<span class="comment">//打印数组元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quicksort</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[],<span class="keyword">int</span> p,<span class="keyword">int</span> r)</span></span>;<span class="comment">//快速排序</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">array</span>[M];</span><br><span class="line">    <span class="keyword">double</span>  duration;</span><br><span class="line">    create_Ary(<span class="built_in">array</span>,M);</span><br><span class="line">    <span class="keyword">clock_t</span> start, finish;</span><br><span class="line">    start = clock();</span><br><span class="line">    quicksort(<span class="built_in">array</span>,<span class="number">0</span>,M);</span><br><span class="line">    finish = clock();</span><br><span class="line">    duration = (<span class="keyword">double</span>)(finish - start) / CLOCKS_PER_SEC;</span><br><span class="line">    <span class="comment">//print(array,M);</span></span><br><span class="line">    <span class="built_in">printf</span>( <span class="string">"%f seconds\n"</span>, duration );</span><br><span class="line">    <span class="comment">//elapsed_time();</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quicksort</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[],<span class="keyword">int</span> p,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> q=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(r-p&lt;<span class="number">20</span>)&#123;</span><br><span class="line">        SelectionSort(<span class="built_in">array</span>,p,r);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(p&lt;r)&#123;</span><br><span class="line">            q=partition(<span class="built_in">array</span>,p,r);</span><br><span class="line">            quicksort(<span class="built_in">array</span>,p,q);</span><br><span class="line">            quicksort(<span class="built_in">array</span>,q+<span class="number">1</span>,r);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[],<span class="keyword">int</span> p,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="built_in">array</span>[r<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">int</span> i=p<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=p;j&lt;r<span class="number">-1</span>;j++)&#123;<span class="comment">//最后一个数内定了</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">array</span>[j]&lt;=x)&#123;</span><br><span class="line">            exchange(&amp;<span class="built_in">array</span>[i+<span class="number">1</span>],&amp;<span class="built_in">array</span>[j]);</span><br><span class="line">            i+=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    exchange(&amp;<span class="built_in">array</span>[i+<span class="number">1</span>],&amp;<span class="built_in">array</span>[r<span class="number">-1</span>]);</span><br><span class="line">    i++;</span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exchange</span><span class="params">(<span class="keyword">int</span> *p,<span class="keyword">int</span> *q)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t=*p;</span><br><span class="line">    *p=*q;</span><br><span class="line">    *q=t;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[],<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,<span class="built_in">array</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">elapsed_time</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Elapsed time:%lu secs.\n"</span>,clock()/CLOCKS_PER_SEC);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">create_Ary</span> <span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    srand(time(<span class="number">0</span>)); <span class="comment">//使随机数函数 rand 产生一序列随机数而设置种子值</span></span><br><span class="line">    <span class="keyword">int</span> i,j,x;</span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        x=rand( );</span><br><span class="line">        <span class="keyword">if</span> (x&gt;=<span class="number">10000</span>) <span class="comment">//产生两位在 10≤而&lt;100 范围内的数</span></span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">        j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (j&lt;=i&amp;&amp;a[j]!=x) <span class="comment">//舍弃相同元素</span></span><br><span class="line">        j++;</span><br><span class="line">        <span class="keyword">if</span> (j&gt;i)a[i++]=x; <span class="comment">//不同的元素送入数组</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SelectionSort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> p,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span>(i = p ; i &lt; r<span class="number">-1</span> ; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> min_index = i;</span><br><span class="line">        <span class="keyword">for</span>(j = i + <span class="number">1</span> ; j &lt; r; j++)</span><br><span class="line">            <span class="keyword">if</span>(a[ min_index ] &gt; a[j])</span><br><span class="line">                min_index = j;</span><br><span class="line">        <span class="keyword">if</span>(min_index != i)&#123;</span><br><span class="line">            <span class="keyword">int</span> temp = a[i];</span><br><span class="line">            a[i] = a[min_index];</span><br><span class="line">            a[min_index] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;3500个数字排序&lt;/p&gt;
&lt;h2 id=&quot;结果&quot;&gt;&lt;a href=&quot;#结果&quot; class=&quot;headerlink&quot; title=&quot;结果&quot;&gt;&lt;/a&gt;结果&lt;/h2&gt;&lt;p&gt;在我的电脑上找到了：10&lt;br&gt;跑了很多次都在10附近&lt;br&gt;本来想做个折线图，打开表格宕机了，先拿表格凑合&lt;/p&gt;
&lt;h2 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;#遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题&lt;/h2&gt;&lt;p&gt;运行程序慢&lt;br&gt;效率提高不明显&lt;br&gt;结果和正确答案有出入&lt;br&gt;10000万溢出了&lt;br&gt;100万以上没有溢出的时候都是段错误&lt;br&gt;我也不知道为什么&lt;br&gt;
    
    </summary>
    
      <category term="编程" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="T" scheme="http://yoursite.com/tags/T/"/>
    
  </entry>
  
  <entry>
    <title>踩坑总结</title>
    <link href="http://yoursite.com/2018/12/14/%E8%B8%A9%E5%9D%91%E7%BB%88%E7%BB%93/"/>
    <id>http://yoursite.com/2018/12/14/踩坑终结/</id>
    <published>2018-12-14T15:06:37.000Z</published>
    <updated>2018-12-14T10:43:57.797Z</updated>
    
    <content type="html"><![CDATA[<p>总结搞blog遇到的问题<br>以便以后换电脑了，不要再踩</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p> 虽然说按照官网安装就好，但是我也不知道为什么就有这么多问题呢。。。呵呵<br> 必要的应用是Node.js和git<br> 安装Node.js。。。其实没有很麻烦，下的安装包安装了以后一点反应也没有，最后只好编译安装了一次<br> （没有Arch的锅，好吧，还是我的锅）<br>  <a id="more"></a><br> Git本来就有了，就不说了<br> 然后还用到了npmi<br> 中间有一个配置path的步骤，不是很记得是哪一步了，估计是用npm装HEXO的时候<br> （有一个nvm什么的吗，真的不记得了</p><h1 id="连上git"><a href="#连上git" class="headerlink" title="连上git"></a>连上git</h1><p> 本来说。。。这一步就不该有问题，但是他居然报错。<br> 仔细看了一下，连不上远程库。<br> 好吧，我知道了，开小号是我的锅，只好把小号的ssh删掉。。。</p><h1 id="然后结束了？"><a href="#然后结束了？" class="headerlink" title="然后结束了？"></a>然后结束了？</h1><p> 现在我的确可以编辑blog了，但是功能还是好少。。。<br> 不管怎么说先搞个标签。<br> 写上tags，不显示。<br> 只好又改了一堆配置文件。<br> 试图连上谷歌分析。报错。<br> 试图换主题，版本太低。<br> 试图更新，安装失败。<br> 彳亍口巴，我先凑合了。</p><p> 最后：这真是一次愉快的不务正业。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;总结搞blog遇到的问题&lt;br&gt;以便以后换电脑了，不要再踩&lt;/p&gt;
&lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;p&gt; 虽然说按照官网安装就好，但是我也不知道为什么就有这么多问题呢。。。呵呵&lt;br&gt; 必要的应用是Node.js和git&lt;br&gt; 安装Node.js。。。其实没有很麻烦，下的安装包安装了以后一点反应也没有，最后只好编译安装了一次&lt;br&gt; （没有Arch的锅，好吧，还是我的锅）&lt;br&gt;
    
    </summary>
    
      <category term="安装记录" scheme="http://yoursite.com/categories/%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="坑" scheme="http://yoursite.com/tags/%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>10-四个基本子空间</title>
    <link href="http://yoursite.com/2018/12/14/10-%E5%9B%9B%E4%B8%AA%E5%9F%BA%E6%9C%AC%E5%AD%90%E7%A9%BA%E9%97%B4/"/>
    <id>http://yoursite.com/2018/12/14/10-四个基本子空间/</id>
    <published>2018-12-14T14:14:26.000Z</published>
    <updated>2018-12-14T12:24:01.768Z</updated>
    
    <content type="html"><![CDATA[<p>四个基本子空间包括了：A的列空间和零空间，A转置的列空间（行空间）和零空间（左零空间）。<br>同时行线性相关等同于列线性相关。（如何联系列行空间）</p><h2 id="列空间"><a href="#列空间" class="headerlink" title="列空间"></a>列空间</h2><p>假设有一个m*n的A矩阵<br>列空间是属于R^m的（一列有m个分量）<br>他的秩为r</p><h2 id="零空间"><a href="#零空间" class="headerlink" title="零空间"></a>零空间</h2><p>属于R^n,显然解有n个分量。<br>  <a id="more"></a><br>秩为n-r</p><h2 id="行空间"><a href="#行空间" class="headerlink" title="行空间"></a>行空间</h2><p>属于R^n就是转置的列空间<br>秩为r</p><h2 id="左零空间（二等公民？）"><a href="#左零空间（二等公民？）" class="headerlink" title="左零空间（二等公民？）"></a>左零空间（二等公民？）</h2><p>属于R^m<br>秩为m-r</p><h2 id="著名的基本子空间关系图"><a href="#著名的基本子空间关系图" class="headerlink" title="著名的基本子空间关系图"></a>著名的基本子空间关系图</h2><p>找书去吧<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">显然同属R^n的两个子空间的秩的和为n，而R^m的为m.</span><br></pre></td></tr></table></figure></p><h2 id="理解空间"><a href="#理解空间" class="headerlink" title="理解空间"></a>理解空间</h2><p>找到他们的基</p><h3 id="行空间-1"><a href="#行空间-1" class="headerlink" title="行空间"></a>行空间</h3><p>例子$$\begin{bmatrix}1 &amp; 2 &amp;  3\1 &amp; 2 &amp; 3 \2 &amp; 5&amp; 8   \\end{bmatrix}$$<br>首先C（R）！=C（A）<br>行变化不会改变行空间但会改变列空间。<br>行空间的基是简化阶梯型的前r行，既行空间最佳的基。</p><h3 id="左零空间"><a href="#左零空间" class="headerlink" title="左零空间"></a>左零空间</h3><p>为了方便表达，说A^T<em>y=0<br>也就是说y^T</em>A=0<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">高斯-若尔消元</span><br><span class="line">EA=R（E是消元矩阵）</span><br><span class="line">写成E[A I](A是m*n，I是m*m)-&gt;[R E]</span><br><span class="line">EI=E EA=R</span><br><span class="line">如果R=I</span><br><span class="line">E=A^(-1)(这种情况A才可逆)</span><br></pre></td></tr></table></figure></p><p>如何求左零空间的基<br>找一个能生成0行向量的组合（左乘一个消元矩阵）<br>R零行对应的消元矩阵的行就是基的向量。（这一行乘矩阵得到0）<br>$$\begin{bmatrix}-1 &amp; 2 &amp;  0\1 &amp; -1 &amp; 0 \-1 &amp; 0&amp; 1   \\end{bmatrix}\begin{bmatrix}1 &amp; 2 &amp;  3&amp;1\1 &amp; 2 &amp; 3&amp;1 \1 &amp; 2&amp; 3&amp;1   \\end{bmatrix}=\begin{bmatrix}1 &amp; 0 &amp;  1&amp;1\0 &amp; 1 &amp; 1&amp;0 \0 &amp; 0&amp; 0&amp;0   \\end{bmatrix}$$<br>在这个例子里很容易看出来</p><h2 id="New-vector-space"><a href="#New-vector-space" class="headerlink" title="New vector space"></a>New vector space</h2><p>将矩阵看成向量，进行加减和数乘运算（不考虑矩阵乘法），得到一种新的空间</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;四个基本子空间包括了：A的列空间和零空间，A转置的列空间（行空间）和零空间（左零空间）。&lt;br&gt;同时行线性相关等同于列线性相关。（如何联系列行空间）&lt;/p&gt;
&lt;h2 id=&quot;列空间&quot;&gt;&lt;a href=&quot;#列空间&quot; class=&quot;headerlink&quot; title=&quot;列空间&quot;&gt;&lt;/a&gt;列空间&lt;/h2&gt;&lt;p&gt;假设有一个m*n的A矩阵&lt;br&gt;列空间是属于R^m的（一列有m个分量）&lt;br&gt;他的秩为r&lt;/p&gt;
&lt;h2 id=&quot;零空间&quot;&gt;&lt;a href=&quot;#零空间&quot; class=&quot;headerlink&quot; title=&quot;零空间&quot;&gt;&lt;/a&gt;零空间&lt;/h2&gt;&lt;p&gt;属于R^n,显然解有n个分量。&lt;br&gt;
    
    </summary>
    
      <category term="线性代数" scheme="http://yoursite.com/categories/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    
    
      <category term="笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>11-矩阵空间、秩一矩阵</title>
    <link href="http://yoursite.com/2018/12/14/11-%E7%9F%A9%E9%98%B5%E7%A9%BA%E9%97%B4%E3%80%81%E7%A7%A9%E4%B8%80%E7%9F%A9%E9%98%B5/"/>
    <id>http://yoursite.com/2018/12/14/11-矩阵空间、秩一矩阵/</id>
    <published>2018-12-14T14:14:26.000Z</published>
    <updated>2018-12-14T12:23:49.589Z</updated>
    
    <content type="html"><![CDATA[<h2 id="矩阵空间"><a href="#矩阵空间" class="headerlink" title="矩阵空间"></a>矩阵空间</h2><p>M为所有3<em>3矩阵（举个3</em>3例子）<br>他的子空间有什么呢？<br>1.对称矩阵<br>2.上三角矩阵<br>3.对角矩阵<br>这个空间的基向量一共有9个（把一个全是0的三乘三矩阵从第一行第一列开始写1，每个向量只有一个1…….）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">难以理解的一个地方：这是个怎么样的空间？（还有矩阵为什么可以作为向量？）</span><br><span class="line">按照向量空间的定义，满足加法乘法封闭，包括了0向量......</span><br><span class="line">尝试写几个矩阵进行加减和数乘运算，满足了以上条件（好吧我接受他是个子空间了）</span><br><span class="line">但是这个空间是个什么样子呢......</span><br></pre></td></tr></table></figure></p><p>1.对称矩阵的基有6个向量（S）<br>2.上三角矩阵的基有6个向量（U）<br>3.对角矩阵的基有3个向量（前两个的交集）<br>我怎么知道有几个呢，从M的九个基里找，如果加起来刚好是某个矩阵，就是基了。对，没错，就是矩阵加法。<br>S∩U=diagond 3<em>3<br>d(S∩U)=3<br>SUU不是一个子空间（并和加？？？ [^谷歌的答案] ），就像一条直线插在一个平面上（哪里不对……）<br>但是S+U是<br> <a id="more"></a><br>S的任一元素，加上U的任意元素得到所有的3</em>3矩阵<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一开始想类比向量加向量和空间并空间，一条直线插在一个平面上的情况，前面说了是并了吧......但是空间相加是什么情况？</span><br></pre></td></tr></table></figure></p><p>一条重要的等式：6+6=3+9（代表了什么都在上文了，这个和概率的交集那条真像……）</p><h2 id="线性微分方程"><a href="#线性微分方程" class="headerlink" title="线性微分方程"></a>线性微分方程</h2><p>d^2 y/d x^2 +y=0<br>这条方程的基是cos x和sin x（e^(ix),听说不讨论……）<br>y=c1cos x+c2 sin x<br>秩为2</p><h2 id="秩一方程"><a href="#秩一方程" class="headerlink" title="秩一方程"></a>秩一方程</h2><p>A$$\begin{bmatrix}1 &amp; 4 &amp;  5\2 &amp; 8 &amp; 10 \\end{bmatrix}$$</p><p>$$\begin{bmatrix}1 \2  \\end{bmatrix}\begin{bmatrix}1 &amp; 4 &amp;  5\\end{bmatrix}$$</p><p>如上，可以写成一列乘一行的形式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A=uv^T就是一列乘一行，u是列向量，v也是列向量，用v的转置表示一个行向量</span><br></pre></td></tr></table></figure></p><p>有一个5*17的秩4矩阵，分解成4个秩一矩阵的组合（就是说，基有四个向量，我把每个基写成一个秩一矩阵，其他的线性组合就好了）<br>那么秩4空间的子集是一个子空间吗？就是说，两个秩4矩阵相加还是秩4矩阵吗？显然是不可能了（所以说哪里显然……）最多可以达到秩8，会不会变小？（本来都秩4了不可能变小了，就是说，已经有四个向量线性无关的话……）<br>Realy?<br>$$\begin{bmatrix}1 &amp; 0 &amp;  0&amp;0\0 &amp; 1 &amp; 0&amp;0\0&amp;0&amp;1&amp;0\0&amp;0&amp;0&amp;1 \\end{bmatrix}+\begin{bmatrix}0 &amp; 1 &amp;  0&amp;0\1 &amp; 0 &amp; 0&amp;0\1&amp;1&amp;1&amp;0\1&amp;1&amp;0&amp;1 \\end{bmatrix}=\begin{bmatrix}1 &amp; 1 &amp;  0&amp;0\1 &amp; 1 &amp; 0&amp;0\1&amp;1&amp;2&amp;0\1&amp;1&amp;0&amp;2 \\end{bmatrix}$$<br>正确性有待验证</p><h3 id="求矩阵空间的四个基本子空间"><a href="#求矩阵空间的四个基本子空间" class="headerlink" title="求矩阵空间的四个基本子空间"></a>求矩阵空间的四个基本子空间</h3><h4 id="0空间"><a href="#0空间" class="headerlink" title="0空间"></a>0空间</h4><p>R^4空间的每一个向量都有四个分量<br>v=[v1 v2 v3 v4](这是一列)<br>（假设各分量之和为0）的（所有向量）构成的集合<br>v1+v2+v3+v4=0<br>这些向量能否构成子空间？<br>取这样的一个向量乘6，分量之和还是0，v+w也还是0<br>Av=0  A=[1 1 1 1](行)（这就是0空间的向量）<br>求空间S就等价于求A的0空间<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">分量是什么？我听到的是一个向量的每一个元素（每一个数字）（不太准确的描述）</span><br><span class="line">谷歌一下......</span><br><span class="line">定义4.1.1 数域F上n个数a1，a2，…，an 组成的有序数组α= ,称为一个（F上的）n维向量（有时也简称向量）．数ai 叫α的第i个分量．常用小写的希腊字母α，β等表示一个向量．向量α也可以写成（a1，a2，…，an）．这样写的向量称为行向量，定义中写的向量称为列向量．作为向量它们被认为是一样的．(来自123我就是哎你 )</span><br><span class="line">看起来没理解错</span><br></pre></td></tr></table></figure></p><p>A的列空间r=1；n-r=3（是零空间的秩），零空间的基就很好求了<br><a href="https://www.zybuluo.com/chawuciren/note/1349042" target="_blank" rel="noopener">具体的看这里</a><br>A的行空间是一维的，左零空间是零空间</p><h2 id="小世界-六度理论"><a href="#小世界-六度理论" class="headerlink" title="小世界(六度理论)"></a>小世界(六度理论)</h2><p>什么是“图”<br>在一个平面上有几个点，这些点通过边链接起来，从一个点到另一个点有几个点的距离。<br>比如一个图有5个节点6条边，可以用一个5*6矩阵表示。<br>你和一个人的联系不会超过6个人。（你会发现，这个世界真小，这就是小世界）<br>点是网站，边是网络链接。</p><p>[^谷歌的答案]:在这篇 <a href="https://www.cnblogs.com/bigmonkey/archive/2018/10/10/9769971.html" target="_blank" rel="noopener">博客</a> 找到了答案</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;矩阵空间&quot;&gt;&lt;a href=&quot;#矩阵空间&quot; class=&quot;headerlink&quot; title=&quot;矩阵空间&quot;&gt;&lt;/a&gt;矩阵空间&lt;/h2&gt;&lt;p&gt;M为所有3&lt;em&gt;3矩阵（举个3&lt;/em&gt;3例子）&lt;br&gt;他的子空间有什么呢？&lt;br&gt;1.对称矩阵&lt;br&gt;2.上三角矩阵&lt;br&gt;3.对角矩阵&lt;br&gt;这个空间的基向量一共有9个（把一个全是0的三乘三矩阵从第一行第一列开始写1，每个向量只有一个1…….）&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;难以理解的一个地方：这是个怎么样的空间？（还有矩阵为什么可以作为向量？）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;按照向量空间的定义，满足加法乘法封闭，包括了0向量......&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;尝试写几个矩阵进行加减和数乘运算，满足了以上条件（好吧我接受他是个子空间了）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;但是这个空间是个什么样子呢......&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;1.对称矩阵的基有6个向量（S）&lt;br&gt;2.上三角矩阵的基有6个向量（U）&lt;br&gt;3.对角矩阵的基有3个向量（前两个的交集）&lt;br&gt;我怎么知道有几个呢，从M的九个基里找，如果加起来刚好是某个矩阵，就是基了。对，没错，就是矩阵加法。&lt;br&gt;S∩U=diagond 3&lt;em&gt;3&lt;br&gt;d(S∩U)=3&lt;br&gt;SUU不是一个子空间（并和加？？？ [^谷歌的答案] ），就像一条直线插在一个平面上（哪里不对……）&lt;br&gt;但是S+U是&lt;br&gt;
    
    </summary>
    
      <category term="线性代数" scheme="http://yoursite.com/categories/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    
    
      <category term="笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>年终了</title>
    <link href="http://yoursite.com/2018/12/14/%E5%B9%B4%E7%BB%88%E4%BA%86/"/>
    <id>http://yoursite.com/2018/12/14/年终了/</id>
    <published>2018-12-14T14:14:26.000Z</published>
    <updated>2018-12-15T17:45:49.174Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/avatar.jpg" alt=""></p><h1 id="2018"><a href="#2018" class="headerlink" title="2018"></a>2018</h1><p>转眼一年就过去了，时光真是过的好快/(ಥ_ಥ )。<br>如果说对今年有什么评价，就是特别佛系，毕竟一开始我就抱着佛系的目的。<br>大体上做事都按照了开心就好的原则，偶尔也去想一下，这样是不是真的有道理。往往想着想着，就因为思考过于艰难，不愿意面对事实而放弃了。<br>所以我假装，如果不深究的话，开心就是<strong>最优解</strong>了吧。<br>我就可以忽视所有的尴尬的，不尽如人意的，不可挽回的局面（最后一个真的是假的）。。。。。。</p><h1 id="今年的6月份"><a href="#今年的6月份" class="headerlink" title="今年的6月份"></a>今年的6月份</h1><p>这一个月，我决定，再也不要从蹈以前的学习状态。<br>一边痛心疾首，一边拿起了手机。<br>再看看专业列表，我.真.的.一.点.感.觉.都.没.有.啊。<br>以前总有人会告诉我，选什么是最好的，你要怎么怎么样。<br><strong>我自己的想法呢？</strong><br>我想了很久，悲伤地发现，我真的没办法考兴趣和特长选出我自己想要的专业。<br>所以第一志愿跟风了化学老师，第二个第一志愿。。。。。。本着能自己写游戏也不错选了个能打代码的专业。<br>非要说更深入的原因，这个专业就业前景好啊，以后就缺程序○。（复读）<br>我自己的想法：反正其他也看不顺眼，就这样咯。更深入的理由，我才不管呢。<br>要说悲哀之所在，大概就是一点也没有对专业深入了解过，没有真真正正地和其他专业做过比较，也没有找到自己想要什么。<br>我浮于表面地选了这个专业，抛弃想法选了这个专业。<br>管他呢，先选再说，<strong>反正我也想不出来</strong>。</p><h1 id="菜是原罪"><a href="#菜是原罪" class="headerlink" title="菜是原罪"></a>菜是原罪</h1><p>这句话起源于电子竞技，我也不知道怎么着，就想到这句话。<br>当然啦。。。。。。我总是想太多。<br>有时候就是控制不住地很sad。<br>然后又会想起我很黑暗很压抑的一段时期。被忽视，被指责，所以我总是害怕。<br>也总是无话可说。<br>菜是原罪这一句话指责意味居多，大概可以这样说：你菜，活该。<br>想来想去，就把自己带进去。<br>我菜，是不是有原因的呢？<br>细细想来，难道我在过去的十几年中真的没有接触编程的机会吗？<br>我翻来覆去地想，不是的，只是我觉得没有关系，不知道就不知道，有时间探究还不如做一点开心的事。<br>就像我以前觉得，这一页不用看，老师说了<strong>不考</strong>。这个不知道没有关系，反正<strong>不想去看</strong>。<br>从来不去探究，只要没有人<strong>催</strong>到我头上，我就不会去做。<br>当然啦。。。。。。每天打打游戏很开心了。<br>直到我觉得这样日复一日很空虚，想到我要考虑我的将来。<br>醒醒吧，我不能总是活在幻想里。<br>种一颗树最好在现在，当然我们都知道更好的时间是十年前。</p><h1 id="HSCTF"><a href="#HSCTF" class="headerlink" title="HSCTF"></a>HSCTF</h1><p>现在想想我当时干了什么呢。。。。。。<br>查了一堆文档。<br>下了一堆软件。<br>看了一波答案。<br>然后了解了CTF的概念。<br>完。<br>知识上的东西真没学到多少。。。。。。最大的收获是：佛系是不行的，还是要烧脑提高学习效率。<br>补充：CTF中的重大失误，你到底有没有明白你是来干什么的？<br>（最后给奖品点赞）</p><h1 id="HSACM"><a href="#HSACM" class="headerlink" title="HSACM"></a>HSACM</h1><p>13==3。<br>其实我也不太重视。<br>主要是我觉得，我还什么都没学会。。。。。。（这不是借口）<br>最大的收获是：体验了ACM的感觉。（真的老早就想体验一下了）。</p><h1 id="新生杯辩论赛"><a href="#新生杯辩论赛" class="headerlink" title="新生杯辩论赛"></a>新生杯辩论赛</h1><p>目的是为了锻炼交流能力。（我时常还是无话可说）<br>决赛的时候被小姐姐夸了一波。<br>说实话，我的质询问题都是上网抄的，就是这么巧对方的理论就碰上了。<br>辩论赛全程抖成塞子，脑子一片空白。<br>事后：我。再也。不要参加。辩论赛了。<br>真的讨厌这种感觉。<br>当然啦。。。。。。辩论赛很有意思很刺激很能锻炼人。<br>但是我还是要说，我。讨。厌。<br>还是喜欢活在自己的世界里(￣ヘ￣o＃)。</p><h1 id="当了一回主持"><a href="#当了一回主持" class="headerlink" title="当了一回主持"></a>当了一回主持</h1><p>并不算很成功。。。。。。一开始以为只要念稿子，后来发现<strong>重点是控场啊</strong>。还有，这样的事我是不会再干的了。</p><h1 id="最不高兴的事"><a href="#最不高兴的事" class="headerlink" title="最不高兴的事"></a>最不高兴的事</h1><p>最坏的情况没有发生，所有的事情都不算事情。<br>但我还是要说，利用我很开心吗，科科。<br>当然啦。。。。。。也不是什么大事情。（反正就是不高兴）</p><h2 id="第一件"><a href="#第一件" class="headerlink" title="第一件"></a>第一件</h2><p>有人问我能不能推荐一下某个人。我本着反正是同学也就帮一下了吧。他说了是<strong>自己</strong>想认识，后来我发现，他只是想引荐另一个人。<br>很正常。。。。。。他要是说不是我就不会推。这种情况下，把目的说的模棱两可一点又有什么可以指责的呢？<br>然后我联系了一下以前的一些事情，后知后觉地发现，哦，原来他要引荐女朋友。。。。。。<br>哈哈，那我能怎么样呢。。。。。。<br>只能说，这样的事情，带点脑子都能想到吧。。。。。。（佛系真的害人不浅）</p><h2 id="第二件"><a href="#第二件" class="headerlink" title="第二件"></a>第二件</h2><p>某个比赛碰上了一人多队的人，老实说，想跟别人组队，直说。</p><h2 id="第三件"><a href="#第三件" class="headerlink" title="第三件"></a>第三件</h2><p>别人写错我名字不是第一天了，我的好朋友也不例外。她们并非不知道我的名字应该怎么写，只是觉得无所谓。<br>有人这样跟我说：只是很正常的事情啊。<br>哈？很正常？<br>可是我很不开心耶。<br>我也确实不想在这么一件小事上和人辩驳，反正我大部分时间无话可说。<br>这样的话，不在乎就好了。下一个。</p><h2 id="第四件"><a href="#第四件" class="headerlink" title="第四件"></a>第四件</h2><p>不说话的人往往不受欢迎，真正面对这个事实要困难得多。要追究原因的话，太多了。。。。。。</p><h1 id="令人高兴的事"><a href="#令人高兴的事" class="headerlink" title="令人高兴的事"></a>令人高兴的事</h1><p>所有非不高兴的时候我都很开心。<br>所以，只要不发生关于忽视、指责、轻蔑的事，我都很开心。<br>( ° ▽、° )当然啦，最开心的时候是我被重视的时候。（大概因为从来没有被重视过）<br>拿了个气球的时候也很开心。<br>划水的时候也很开心。<br>不开心的时候看看文学著作也很开心。<br>最后。。。。。。我终于摆脱了高中的学习状态，万岁。</p><h1 id="客观地对这个学期做一个总结吧"><a href="#客观地对这个学期做一个总结吧" class="headerlink" title="客观地对这个学期做一个总结吧"></a>客观地对这个学期做一个总结吧</h1><p>不足之处略多，也很正常，新手没有经验。<br>还是太浮躁，比较心理太重。<br>胡思乱想的事情太多，就是容易想多。<br>最大的不足，没有掌控自己的学习，基本上一学期都在佛系瞎搞。<br>做事也没有目标没有计划。<br>这里必须点名@批评（并不，只是玩梗）：<a href="https://www.zhihu.com/question/39053063" target="_blank" rel="noopener">https://www.zhihu.com/question/39053063</a><br>看了以后感到十分愧疚，学不好是我的锅呀。。。。。。所以要劳逸结合。<br>逸了就能提高效率？太天真了。<br>还是应该一边努力一边想办法。</p><h2 id="说点题外话"><a href="#说点题外话" class="headerlink" title="说点题外话"></a>说点题外话</h2><p>不由想起我的同学们，他们有努力的有不努力的，有成绩好的有成绩不好的，两个因素并没有什么必然关系。<br>我有一个努力的同学，努力了也还是考不好。<br>并非鼓吹成绩论。。。。。。只是想到这里，感慨颇多。<br>指不定哪一天我就会变成这样的人了。<br>所以每当说道努力我就开始方。<br>但是努力有什么错呢？<br>一种情况是，我为了考试而努力。<br>一种情况是，我被消极观点打击不努力，开始放松。<br>难道后者回比前者好？<br>我是不相信的。<br>回想起这个学期，也算是我能做的最好的了。<br>抱着什么样的心态取得什么养的成果。</p><h2 id="另一个题外话"><a href="#另一个题外话" class="headerlink" title="另一个题外话"></a>另一个题外话</h2><p>当我被提问的时候我在想什么，当我看到一道题的时候我在想什么<br>首先吐槽一下题目，哦，原来是要这样。。。。。。（这就是内心戏太多的坏处了，尽管我想克制自己）<br>如果题目简单，就感叹，啊，水题。<br>否则，gg，不会做，怎么办？（然后多半是一直循环怎么办了，因此我往往想不出答案）<br>然后一边神游一边做题，这就是效率低下的原因啊。</p><h1 id="终于说到这个学期有什么做的好的地方"><a href="#终于说到这个学期有什么做的好的地方" class="headerlink" title="终于说到这个学期有什么做的好的地方"></a>终于说到这个学期有什么做的好的地方</h1><p>摆脱了黑暗时期+40<br>基本还算满意+10<br>能不能及格看期末了</p><h1 id="某些想法"><a href="#某些想法" class="headerlink" title="某些想法"></a>某些想法</h1><p>有时候会想：能把胡思乱想的时间用在学习上，很多问题就解决了。<br>首先，旧的问题解决了还有新的问题，不能总靠挤时间来解决问题鸭。<br><strong>并非是说挤时间不对</strong><br>而且胡思乱想也是该改改。<br>有些时候，确实是可以更高效。</p><h2 id="低效学习"><a href="#低效学习" class="headerlink" title="低效学习"></a>低效学习</h2><p>低效学习有没有用？<br>如果没有高效学习法，当然是很有用的咯，总而言之，比不学习好的多了。<br>但是，一直低效学习，很有问题。<br>这就是我的锅了。</p><h2 id="关于本专业"><a href="#关于本专业" class="headerlink" title="关于本专业"></a>关于本专业</h2><p>选这个专业并非不如我愿，我还是说。。。我没有什么想法。<br>进来以后发现：大家都是大佬，只有我是萌新.jpg<br>彳亍口巴，那我能怎么样呢，我也很绝望啊。<br>中间多次有劝退的感觉。<br>由于“无话可说的原因”，后来也没有行动。<br>但是我想吧，转专业也不能解决问题啊，我还是不可避免地会碰上一堆牛人，我还是没有对其他专业深入了解过。。。。。。<br>而且我还是没有什么想法。<br>细细想来转专业会不会更好，和当年选文科会不会更好，是同样一个问题。<br>是否应该别人所说的“不适合”或者“会更好”，来做决定的呢？<br>还是说我自己就觉得，别的选择会更好？<br>又或者说，判断标准是什么呢？<br>成就？开心？价值？意义？<br>我不知道。<br>我只觉得，能有一个地方让我学习就够了。不要让我再碰上乱七八糟的事情。<br>重点是<strong>乱七八糟的事情</strong>。(深度吐槽)</p><p>总算把想说的话都说完了。。。<br>来年干杯[]~(￣▽￣)~*</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/avatar.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;2018&quot;&gt;&lt;a href=&quot;#2018&quot; class=&quot;headerlink&quot; title=&quot;2018&quot;&gt;&lt;/a&gt;2018&lt;/h1&gt;&lt;p&gt;转眼一年就过去了，时光真是过的好快
      
    
    </summary>
    
      <category term="杂谈" scheme="http://yoursite.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="总结" scheme="http://yoursite.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
</feed>
